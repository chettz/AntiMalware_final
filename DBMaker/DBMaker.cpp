#include "cmdparser.h"
#include "dbfile.h"

using namespace cmdparser;
using namespace dbfile;

int _tmain(int argc, TCHAR* argv[])
{
	CmdParser cmdParser;
	
	// 옵션 등록
	cmdParser.set_required<tstring>(_T("o"), _T("output_dir"), _T("The directory where the db file will be saved."));
	cmdParser.set_required<tstring>(_T("c"), _T("source_csv"), _T("The source CSV file path."));
	cmdParser.set_optional<tstring>(_T("f"), _T("output_file_name"), _T(""), _T("The output db file name."));

	// 커맨드라인 파싱
	cmdParser.parseCmdLine(argc, argv);

	if (cmdParser.isPrintHelp())
	{
		// 도움말 옵션 설정 시 도움말 출력
		tcout << cmdParser.getHelpMessage(_T("DBMaker"));
	}
	else
	{
		try
		{
			DBFile dbFile;
			tstring outputDir = cmdParser.get<tstring>(_T("o"));
			tstring sourceCSV = cmdParser.get<tstring>(_T("c"));
			tstring outputFileName = cmdParser.get<tstring>(_T("f"));

			if (!outputFileName.empty())
			{
				dbFile.setDBFileName(outputFileName);
			}
			if (!dbFile.makeDBFile(sourceCSV, outputDir))
			{
				cout << format("Can't make db files\n");
			}
		}
		catch (std::runtime_error ex)
		{		
			// 오류 발생 시에 오류 내용과 함께 도움말 출력
			cout << format("Error : {}\n\n", ex.what());
			tcout << cmdParser.getHelpMessage(_T("DBMaker"));
		}
	}
	return 0;
};
