#pragma once

#include "typedef.h"
#include "ipc.h"
#include <string>
#include <iostream>
#include <filesystem>
#include <thread>
#include <chrono>
#include <shlobj.h>

namespace scandialog
{
	#define SYSTEM_ROOT_PATH				_T("C:\\")
	#define DISPLAY_ITEM_SKIP_COUNT			20
	#define THREAD_COMPLETE_MESSAGE_LPARAM	-1

	using namespace std;
	using namespace std::filesystem;
	using namespace ipc;

	class ScanDialog
	{
	private:
		IPC ipc_;
		HWND dialogHwnd_;
		HWND listBoxHwnd_;
		size_t scanItemCount_;
		int scanPathId_;
		int scanBtnId_;
		wstring selectedDirectory_;
		wstring currentScanPath_;
		bool isAlive_;
		bool isScanning_;
		bool isInitilized_;

	private:
		bool isDisplayScanPath(void);
		bool ScanFile(IPC_MESSAGE& ipcMessage, const tstring& filePath, tstring& detectName);
		bool GetScanResult(IPC_MESSAGE& ipcMessage, tstring& detectName);
		void ScanDirectoryThread(void);

	public:
		ScanDialog();
		~ScanDialog();
		const tstring& GetSelectedDirectory(void);
		bool BrowseFolder(void);
		void setHwnd(const HWND& dialogHwnd, const HWND& listBoxHwnd, const int& scanPathId, const int& scanBtnId);
		bool startScan(void);
		void stopScan(void);
		bool isScanning(void);
	};
}

