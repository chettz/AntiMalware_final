#include "ScanGUI.h"
#include "ScanDialog.h"

using namespace scandialog;
static ScanDialog scanDialog;

#define MAX_LOADSTRING 100

// 전역 변수:
HINSTANCE g_hInst;                              // 현재 인스턴스
HICON g_hIcon;                                  // 현재 아이콘
WCHAR szTitle[MAX_LOADSTRING];                  // 제목 표시줄 텍스트
WCHAR szWindowClass[MAX_LOADSTRING];            // 기본 창 클래스 이름

// 이 코드 모듈에 포함된 함수의 선언을 전달
ATOM                MyRegisterClass(HINSTANCE hInstance);
BOOL                InitInstance(HINSTANCE, int);
LRESULT CALLBACK    WndProc(HWND, UINT, WPARAM, LPARAM);
INT_PTR CALLBACK    ScanDialogCallback(HWND, UINT, WPARAM, LPARAM);

// 메인 함수
int APIENTRY wWinMain(_In_ HINSTANCE hInstance, _In_opt_ HINSTANCE hPrevInstance, _In_ LPWSTR lpCmdLine, _In_ int nCmdShow)
{
    UNREFERENCED_PARAMETER(hPrevInstance);
    UNREFERENCED_PARAMETER(lpCmdLine);

    // 전역 문자열 초기화
    LoadStringW(hInstance, IDS_APP_TITLE, szTitle, MAX_LOADSTRING);
    LoadStringW(hInstance, IDC_SCANGUI, szWindowClass, MAX_LOADSTRING);
    MyRegisterClass(hInstance);

    // 애플리케이션 초기화 수행
    if (!InitInstance (hInstance, nCmdShow))
    {
        return FALSE;
    }

    HACCEL hAccelTable = LoadAccelerators(hInstance, MAKEINTRESOURCE(IDC_SCANGUI));
    MSG msg;

    // 기본 메시지 루프
    while (GetMessage(&msg, nullptr, 0, 0))
    {
        if (!TranslateAccelerator(msg.hwnd, hAccelTable, &msg))
        {
            TranslateMessage(&msg);
            DispatchMessage(&msg);
        }
    }
    return (int) msg.wParam;
}

// 창 클래스 등록
ATOM MyRegisterClass(HINSTANCE hInstance)
{
    WNDCLASSEXW wcex;

    g_hIcon = LoadIcon(hInstance, MAKEINTRESOURCE(IDI_SCANGUI));
    wcex.cbSize = sizeof(WNDCLASSEX);
    wcex.style          = CS_HREDRAW | CS_VREDRAW;
    wcex.lpfnWndProc    = WndProc;
    wcex.cbClsExtra     = 0;
    wcex.cbWndExtra     = 0;
    wcex.hInstance      = hInstance;
    wcex.hIcon          = g_hIcon;
    wcex.hCursor        = LoadCursor(nullptr, IDC_ARROW);
    wcex.hbrBackground  = (HBRUSH)(COLOR_WINDOW+1);
    wcex.lpszMenuName   = MAKEINTRESOURCEW(IDC_SCANGUI);
    wcex.lpszClassName  = szWindowClass;
    wcex.hIconSm        = LoadIcon(wcex.hInstance, MAKEINTRESOURCE(IDI_SMALL));

    return RegisterClassExW(&wcex);
}

// 인스턴스 핸들을 저장하고 메인 창을 생성
BOOL InitInstance(HINSTANCE hInstance, int nCmdShow)
{
   // 인스턴스 핸들을 전역 변수에 저장
   g_hInst = hInstance; 

   // 메인 창 생성
   HWND hWnd = CreateWindowW(szWindowClass, szTitle, WS_OVERLAPPEDWINDOW,
      0, 0, 0, 0, nullptr, nullptr, hInstance, nullptr);
   if (hWnd)
   {
       // 메인 창은 화면 표시 안함
       ShowWindow(hWnd, FALSE);
       UpdateWindow(hWnd);
       return TRUE;
   }
   else
   {
      return FALSE;
   }
}

// 메인 창의 메시지 처리 함수
LRESULT CALLBACK WndProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)
{
    static HWND hButton;

    switch (message)
    {
    case WM_CREATE:
        // 검사 다이얼로그 생성 및 표시
        DialogBox(g_hInst, MAKEINTRESOURCE(IDD_SCAN_DIALOG), hWnd, ScanDialogCallback);
        break;
    case WM_DESTROY:
        PostQuitMessage(0);
        break;
    default:
        return DefWindowProc(hWnd, message, wParam, lParam);
    }
    return 0;
}

// 검사 다이얼로그 메시지 처리 함수
INT_PTR CALLBACK ScanDialogCallback(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)
{
    UNREFERENCED_PARAMETER(lParam);

    if (message == WM_INITDIALOG)
    {
        // 아이콘 설정
        SendMessage(hDlg, WM_SETICON, ICON_SMALL, (LPARAM)g_hIcon);

        // HWND 설정
        scanDialog.setHwnd(hDlg, GetDlgItem(hDlg, IDC_DETECTED_LIST), IDC_CURRENT_SCAN, IDC_SCAN_BTN);

        // 스캔 버튼 비활성화
        EnableWindow(GetDlgItem(hDlg, IDC_SCAN_BTN), FALSE);
    }
    else if (message == WM_COMMAND)
    {
        // 창 닫기 버튼을 누르면 IDCANCEL이 호출
        if (LOWORD(wParam) == IDOK || LOWORD(wParam) == IDCANCEL)
        {
            EndDialog(hDlg, LOWORD(wParam));
            return (INT_PTR)TRUE;
        }
        else
        {
            // 검사 대상 디렉토리 선택
            if (LOWORD(wParam) == IDC_SELECT_BTN)
            {
                // 검사 대상 디렉토리 선택이 성공 했을 때만 버튼 상태 변경
                if (scanDialog.BrowseFolder() && !scanDialog.GetSelectedDirectory().empty())
                {
                    ShowWindow(GetDlgItem(hDlg, IDC_SELECTED_FOLDER), FALSE);
                    SetDlgItemText(hDlg, IDC_SELECTED_FOLDER, scanDialog.GetSelectedDirectory().c_str());
                    ShowWindow(GetDlgItem(hDlg, IDC_SELECTED_FOLDER), TRUE);
                    EnableWindow(GetDlgItem(hDlg, IDC_SCAN_BTN), TRUE);
                    SetFocus(GetDlgItem(hDlg, IDC_SCAN_BTN));
                }
            }
            // 검사 시작
            else if (LOWORD(wParam) == IDC_SCAN_BTN)
            {
                // 검사 스레드 종료 시 보내진 메시지는 버튼 상태 변경을 위한 것
                if (lParam == THREAD_COMPLETE_MESSAGE_LPARAM)
                {
                    SetDlgItemText(hDlg, IDC_SCAN_BTN, _T("검사"));
                    EnableWindow(GetDlgItem(hDlg, IDC_SCAN_BTN), TRUE);
                    EnableWindow(GetDlgItem(hDlg, IDC_SELECT_BTN), TRUE);
                }
                else
                {
                    // 버튼 상태 변경 및 클릭 처리
                    if (scanDialog.isScanning())
                    {
                        SetDlgItemText(hDlg, IDC_SCAN_BTN, _T("검사"));
                        EnableWindow(GetDlgItem(hDlg, IDC_SCAN_BTN), FALSE);
                        EnableWindow(GetDlgItem(hDlg, IDC_SELECT_BTN), FALSE);

                        // 검사 중지
                        scanDialog.stopScan();

                        EnableWindow(GetDlgItem(hDlg, IDC_SCAN_BTN), TRUE);
                        EnableWindow(GetDlgItem(hDlg, IDC_SELECT_BTN), TRUE);
                    }
                    else
                    {
                        SetDlgItemText(hDlg, IDC_SCAN_BTN, _T("중지"));
                        EnableWindow(GetDlgItem(hDlg, IDC_SELECT_BTN), FALSE);
                        SendMessage(GetDlgItem(hDlg, IDC_DETECTED_LIST), LB_RESETCONTENT, 0, 0);

                        // 검사 시작
                        scanDialog.startScan();
                    }
                }
            }
        }
    }
    else if (message == WM_PAINT)
    {
        /*
        PAINTSTRUCT ps;
        HDC hdc = BeginPaint(hDlg, &ps);
        EndPaint(hDlg, &ps);
        */
    }
    else if (message == WM_CTLCOLORDLG)
    {
        // 다이얼로그 배경 설정
        return (INT_PTR)GetStockObject(WHITE_BRUSH);
    }
    else if (message == WM_CTLCOLORSTATIC)
    {
        // 컨트롤 텍스트 및 배경색 설정
        int dlgItem = GetDlgCtrlID((HWND)lParam);
        if ((dlgItem == IDC_STATIC_DESC) || (dlgItem == IDC_SELECTED_FOLDER) || (dlgItem == IDC_CURRENT_SCAN))
        {
            HDC hdcStatic = (HDC)wParam; // or obtain the static handle in some other way
            SetTextColor(hdcStatic, RGB(0, 0, 0)); // text color
            SetBkColor(hdcStatic, RGB(255, 255, 255));
            return (LRESULT)GetStockObject(NULL_BRUSH);
        }
    }
    else if (message == WM_DESTROY)
    {
        // 다이얼로그 종료 시 프로그램 종료 메시지 보냄
        PostQuitMessage(0);
    }
    return (INT_PTR)FALSE;
}